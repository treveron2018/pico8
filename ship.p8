pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
	
	p={
		x=64,
		y=64,
		dx=0,
		dy=0,
		r=5,
		px={0,0,0,0},
		py={0,0,0,0},
		pang={0,.4,-.4,.5},
		poff={0,0,0,1},
		rot=1,
		rotspd=.02,
		hp=3,
		acc=.05,
		spd=0,
		frc=.01,
		vmax=1.5,
		vmin=-1.5,
		bull_lim=3,
		isdead=false,
		rsp=150,
		rspt=0,
		rspx=64,
		rspy=64
	}
	bullets={}
	propeller={}
	bullets={}
	particles={}
	shwaves={}
	vdoors={}
	t=0
	upd=upd_game
	drw=drw_game
end

function _update60()
	t+=1
	upd()
end

function _draw()
	cls()
	drw()
--	print(debug,0,0,7)
end

function upd_game()
	if(not p.isdead) then
		upd_shp()
		move_shp()
	else
		respawn()
	end
	upd_prop()
	upd_bul()
	upd_part()
	upd_shw()
	spawn_doors()
	upd_doors()
end

function drw_game()
	map()
	if(not p.isdead)drw_shp()
	drw_prop()
	drw_bul()
	drw_part()
	drw_shw()
	drw_doors()
	--debug
	--print(#vdoors,0, 0, 10)
end
-->8
--ship

function upd_shp()	
	for i=1,4 do
		p.px[i]=sin(p.rot+p.pang[i])*(p.r+p.poff[i])+p.x
		p.py[i]=cos(p.rot+p.pang[i])*(p.r+p.poff[i])+p.y
		if check_walls(p.px[i],p.py[i]) and not p.isdead then
			p.isdead=true
			sparks(p.px[i],p.py[i],50)
			add_shwave(p.x,p.y,0,20)
		end		
	end
	p.x+=p.dx
	p.y+=p.dy
end

function drw_shp()
	for i=1,3 do
		local o=1
		if(i==3)o=-2
		line(p.px[i],p.py[i],p.px[i+o],p.py[i+o],7)
	end
end

function move_shp()
	if(btn(⬅️))p.rot-=p.rotspd
	if(btn(➡️))p.rot+=p.rotspd
	if(p.rot>1)p.rot=-1
	if btn(🅾️) then
		thrust()
		propel()
	end
	if(btnp(❎))shoot()

	if(p.dx>0)p.dx-=p.frc
	if(p.dx<0)p.dx+=p.frc
	if(p.dy>0)p.dy-=p.frc
	if(p.dy<0)p.dy+=p.frc
	
	check_pos(p)
end

function check_pos(c)
	if(c.x<0)c.x=128
	if(c.x>128)c.x=0
	if(c.y<0)c.y=128
	if(c.y>128)c.y=0
end

function thrust()
	p.dx+=-sin(p.rot*-1)*p.acc	
	p.dx=min(p.dx,1.5)
	p.dx=max(p.dx,-1.5)
	p.dy+=cos(p.rot*-1)*p.acc
	p.dy=min(p.dy,1.5)
	p.dy=max(p.dy,-1.5)
end

function propel()
	if t%4==0 then
		local c={
		x=p.px[4],
		y=p.py[4],
		r=2,
		age=10}
		add(propeller,c)
	end
end

function upd_prop()
	for c in all(propeller) do
		c.age-=1
		if c.age<=0 then
			c.r-=.25
			if(c.r<=0)del(propeller,c)
		end
	end
end

function drw_prop()
	for c in all(propeller) do
		circ(c.x,c.y,c.r,7)
	end
end

function shoot()
	if #bullets<p.bull_lim then
		local b={
			x=p.px[1],
			y=p.py[1],
			dx=-sin(p.rot*-1)*p.r+p.x*0.005,
			dy=cos(p.rot*-1)*p.r+p.y*.005,
			r=1,
			age=15
		}
		add(bullets,b)
	end
end

function upd_bul()
	for b in all(bullets) do
		b.age-=1
		if(b.age==0)del(bullets,b)
		b.x+=b.dx
		b.y+=b.dy
		check_pos(b)
		if check_walls(b.x,b.y) then
			sparks(b.x,b.y,5)
			del(bullets,b)
		end
	end
end

function drw_bul()
	for b in all(bullets) do
		circfill(b.x,b.y,b.r,7)
	end
end

function respawn()
	p.rspt+=1
	if p.rspt==p.rsp-30 then
		p.x,p.y=p.rspx,p.rspy
		add_shwave(p.x,p.y,20,0)
	end
	if p.rspt>=p.rsp then
		p.isdead,p.rspt,p.dx,p.dy=false,0,0,0
		upd_shp()
	end
end
-->8
--tools

function check_walls(x,y)
	if (fget(mget(x/8,y/8),0))return true
	return false
end

function sparks(_x,_y,n)
	for i=1,n do
		local p={
			x=_x,
			y=_y,
			dx=rnd(2)-1,
			dy=rnd(2)-1,
			age=20+flr(rnd(10)),
			col=7
		}
		add(particles,p)
	end
end

function upd_part()

	for p in all(particles) do
		p.x+=p.dx
		p.y+=p.dy
		p.age-=1
		if p.age<=0 then
			p.dx-=.5
			p.dy-=.5
			if(p.dx<=0 and p.dy<=0)del(particles,p)
		end
	end
end

function drw_part()
	for p in all(particles) do
		pset(p.x,p.y,p.col)
	end
end

function add_shwave(_x,_y,_r,_tr)
		local s={
			x=_x,
			y=_y,
			r=_r,
			tr=_tr,
			col=7
		}
		add(shwaves,s)
end

function upd_shw()
	for s in all(shwaves) do
		local x=1
		if(s.tr==0)x*=-1
		s.r+=.5*x
		if(s.r==s.tr)del(shwaves,s)
	end
end

function drw_shw()
	for s in all(shwaves) do
		circ(s.x,s.y,s.r,7)
	end
end

function dist(p1,p2)
	return sqrt((p1.x-p2.x)^2+(p1.y-p2.y)^2)
end
-->8
--map

function spawn_doors()
	for x=0, 15 do
		for y=0, 15 do
			if mget(x,y)==2 then
				mset(x,y,0)
				add_vdoor(x,y)
			end
		end
	end
end

function add_vdoor(_x,_y)
	local d={
		x=_x*8+4,
		y=_y*8,
		w=8,
		h=16,
		o=0, 
		closed=true,
		opening=false
	}
	d.sensor={
		x=d.x,
		y=d.y+8,
		r=20
	}
	add(vdoors,d)
end

function upd_doors()
	for d in all(vdoors) do
		for i=1,3 do
			local p={x=p.px[i],y=p.py[i]}
			if dist(p, d.sensor)<d.sensor.r then
				d.closed=false
				return
			else d.closed=true
			end
		end
	end
end

function drw_doors()
	for d in all(vdoors) do
		if(d.closed)rectfill(d.x,d.y,d.x+d.w-1,d.y+d.h-1,7)
		circ(d.sensor.x, d.sensor.y, d.sensor.r)
	end
end
__gfx__
00000000777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777770000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
